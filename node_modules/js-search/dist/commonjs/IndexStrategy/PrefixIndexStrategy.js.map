{"version":3,"sources":["../../../source/IndexStrategy/PrefixIndexStrategy.js"],"names":["PrefixIndexStrategy","token","expandedTokens","string","i","length","charAt","push"],"mappings":";;;;;;;;;;AAIA;;;IAGaA,mB,WAAAA,mB;;;;;;;;;AAEX;;;gCAGYC,K,EAAgC;AAC1C,UAAIC,iBAAiB,EAArB;AACA,UAAIC,SAAS,EAAb;;AAEA,WAAK,IAAIC,IAAI,CAAR,EAAWC,SAASJ,MAAMI,MAA/B,EAAuCD,IAAIC,MAA3C,EAAmD,EAAED,CAArD,EAAwD;AACtDD,kBAAUF,MAAMK,MAAN,CAAaF,CAAb,CAAV;AACAF,uBAAeK,IAAf,CAAoBJ,MAApB;AACD;;AAED,aAAOD,cAAP;AACD;;;;;;AACF","file":"PrefixIndexStrategy.js","sourcesContent":["// @flow\n\nimport type { IIndexStrategy } from './IndexStrategy';\n\n/**\n * Indexes for prefix searches (e.g. the term \"cat\" is indexed as \"c\", \"ca\", and \"cat\" allowing prefix search lookups).\n */\nexport class PrefixIndexStrategy implements IIndexStrategy {\n\n  /**\n   * @inheritDocs\n   */\n  expandToken(token : string) : Array<string> {\n    var expandedTokens = [];\n    var string = '';\n\n    for (var i = 0, length = token.length; i < length; ++i) {\n      string += token.charAt(i);\n      expandedTokens.push(string);\n    }\n\n    return expandedTokens;\n  }\n};\n"]}