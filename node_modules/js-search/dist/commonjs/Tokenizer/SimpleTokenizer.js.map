{"version":3,"sources":["../../../source/Tokenizer/SimpleTokenizer.js"],"names":["REGEX","SimpleTokenizer","text","split","filter"],"mappings":";;;;;;;;;;AAIA,IAAIA,QAAQ,oBAAZ;;AAEA;;;;;IAGaC,e,WAAAA,e;;;;;;;;;AAEX;;;6BAGSC,I,EAA+B;AACtC,aAAOA,KACJC,KADI,CACEH,KADF,EAEJI,MAFI,CAGH,UAACF,IAAD;AAAA,eAAUA,IAAV;AAAA,OAHG,CAGY;AAHZ,OAAP;AAKD;;;;;;AACF","file":"SimpleTokenizer.js","sourcesContent":["// @flow\n\nimport type { ITokenizer } from './Tokenizer';\n\nvar REGEX = /[^a-zа-яё0-9\\-']+/i;\n\n/**\n * Simple tokenizer that splits strings on whitespace characters and returns an array of all non-empty substrings.\n */\nexport class SimpleTokenizer implements ITokenizer {\n\n  /**\n   * @inheritDocs\n   */\n  tokenize(text : string) : Array<string> {\n    return text\n      .split(REGEX)\n      .filter(\n        (text) => text // Filter empty tokens\n      );\n  }\n};\n"]}