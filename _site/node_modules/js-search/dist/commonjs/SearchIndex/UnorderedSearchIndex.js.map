{"version":3,"sources":["../../../source/SearchIndex/UnorderedSearchIndex.js"],"names":["UnorderedSearchIndex","_tokenToUidToDocumentMap","token","uid","doc","tokens","corpus","intersectingDocumentMap","tokenToUidToDocumentMap","i","numTokens","length","documentMap","keys","Object","j","numKeys","documents","push"],"mappings":";;;;;;;;;;;;AAIA;;;IAGaA,oB,WAAAA,oB;AAGX,kCAAc;AAAA;;AACZ,SAAKC,wBAAL,GAAgC,EAAhC;AACD;;AAED;;;;;;;kCAGcC,K,EAAgBC,G,EAAcC,G,EAAqB;AAC/D,UAAI,QAAO,KAAKH,wBAAL,CAA8BC,KAA9B,CAAP,MAAgD,QAApD,EAA8D;AAC5D,aAAKD,wBAAL,CAA8BC,KAA9B,IAAuC,EAAvC;AACD;;AAED,WAAKD,wBAAL,CAA8BC,KAA9B,EAAqCC,GAArC,IAA4CC,GAA5C;AACD;;AAED;;;;;;2BAGOC,M,EAAwBC,M,EAAwC;AACrE,UAAIC,0BAA0B,EAA9B;;AAEA,UAAIC,0BAA0B,KAAKP,wBAAnC;;AAEA,WAAK,IAAIQ,IAAI,CAAR,EAAWC,YAAYL,OAAOM,MAAnC,EAA2CF,IAAIC,SAA/C,EAA0DD,GAA1D,EAA+D;AAC7D,YAAIP,QAAQG,OAAOI,CAAP,CAAZ;AACA,YAAIG,cAAcJ,wBAAwBN,KAAxB,CAAlB;;AAEA;AACA,YAAI,CAACU,WAAL,EAAkB;AAChB,iBAAO,EAAP;AACD;;AAED,YAAIH,MAAM,CAAV,EAAa;AACX,cAAII,OAAOC,OAAOD,IAAP,CAAYD,WAAZ,CAAX;;AAEA,eAAK,IAAIG,IAAI,CAAR,EAAWC,UAAUH,KAAKF,MAA/B,EAAuCI,IAAIC,OAA3C,EAAoDD,GAApD,EAAyD;AACvD,gBAAIZ,MAAMU,KAAKE,CAAL,CAAV;;AAEAR,oCAAwBJ,GAAxB,IAA+BS,YAAYT,GAAZ,CAA/B;AACD;AACF,SARD,MAQO;AACL,cAAIU,OAAOC,OAAOD,IAAP,CAAYN,uBAAZ,CAAX;;AAEA,eAAK,IAAIQ,IAAI,CAAR,EAAWC,UAAUH,KAAKF,MAA/B,EAAuCI,IAAIC,OAA3C,EAAoDD,GAApD,EAAyD;AACvD,gBAAIZ,MAAMU,KAAKE,CAAL,CAAV;;AAEA,gBAAI,QAAOH,YAAYT,GAAZ,CAAP,MAA4B,QAAhC,EAA0C;AACxC,qBAAOI,wBAAwBJ,GAAxB,CAAP;AACD;AACF;AACF;AACF;;AAED,UAAIU,OAAOC,OAAOD,IAAP,CAAYN,uBAAZ,CAAX;AACA,UAAIU,YAAY,EAAhB;;AAEA,WAAK,IAAIR,IAAI,CAAR,EAAWO,UAAUH,KAAKF,MAA/B,EAAuCF,IAAIO,OAA3C,EAAoDP,GAApD,EAAyD;AACvD,YAAIN,MAAMU,KAAKJ,CAAL,CAAV;;AAEAQ,kBAAUC,IAAV,CAAeX,wBAAwBJ,GAAxB,CAAf;AACD;;AAED,aAAOc,SAAP;AACD;;;;;;AACF","file":"UnorderedSearchIndex.js","sourcesContent":["// @flow\n\nimport type { ISearchIndex } from './SearchIndex';\n\n/**\n * Search index capable of returning results matching a set of tokens but without any meaningful rank or order.\n */\nexport class UnorderedSearchIndex implements ISearchIndex {\n  _tokenToUidToDocumentMap : {[token : string] : {[uid : string] : any}};\n\n  constructor() {\n    this._tokenToUidToDocumentMap = {};\n  }\n\n  /**\n   * @inheritDocs\n   */\n  indexDocument(token : string, uid : string, doc : Object) : void {\n    if (typeof this._tokenToUidToDocumentMap[token] !== 'object') {\n      this._tokenToUidToDocumentMap[token] = {};\n    }\n\n    this._tokenToUidToDocumentMap[token][uid] = doc;\n  }\n\n  /**\n   * @inheritDocs\n   */\n  search(tokens : Array<string>, corpus : Array<Object>) : Array<Object> {\n    var intersectingDocumentMap = {};\n\n    var tokenToUidToDocumentMap = this._tokenToUidToDocumentMap;\n\n    for (var i = 0, numTokens = tokens.length; i < numTokens; i++) {\n      var token = tokens[i];\n      var documentMap = tokenToUidToDocumentMap[token];\n\n      // Short circuit if no matches were found for any given token.\n      if (!documentMap) {\n        return [];\n      }\n\n      if (i === 0) {\n        var keys = Object.keys(documentMap);\n\n        for (var j = 0, numKeys = keys.length; j < numKeys; j++) {\n          var uid = keys[j];\n\n          intersectingDocumentMap[uid] = documentMap[uid];\n        }\n      } else {\n        var keys = Object.keys(intersectingDocumentMap);\n\n        for (var j = 0, numKeys = keys.length; j < numKeys; j++) {\n          var uid = keys[j];\n\n          if (typeof documentMap[uid] !== 'object') {\n            delete intersectingDocumentMap[uid];\n          }\n        }\n      }\n    }\n\n    var keys = Object.keys(intersectingDocumentMap);\n    var documents = [];\n\n    for (var i = 0, numKeys = keys.length; i < numKeys; i++) {\n      var uid = keys[i];\n\n      documents.push(intersectingDocumentMap[uid]);\n    }\n\n    return documents;\n  }\n};\n"]}